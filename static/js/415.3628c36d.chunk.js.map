{"version":3,"file":"static/js/415.3628c36d.chunk.js","mappings":"kOA2CA,UAtCa,WACX,OAAkCA,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEMC,EAAc,mCAAG,6FACrBD,EAAS,MACTF,EAAa,IAFQ,SAGAI,EAAAA,EAAAA,kBAA6BF,GAH7B,cAGfG,EAHe,uBAIaA,QAJb,IAIaA,OAJb,EAIaA,EAAQC,QAJrB,OAIfC,EAJe,OAKrBP,EAAaO,GALQ,2CAAH,qDAYpB,OAJAC,EAAAA,EAAAA,YAAU,WACRL,GACD,GAAE,KAGD,2BACE,SAAC,KAAD,UACa,OAAVF,GACC,gCACE,4CACA,wBACGF,EAAUU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OACb,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaH,GAArB,SAA4BC,GAASC,KAD9BF,EADI,UAQnB,0BAAKT,EAAL,iCAKT,C,qFCzCKa,EAAU,mCACVC,EAAU,gCAEHX,EAAa,CACxBY,kBAAkB,WAAD,wBAAE,WAAMd,GAAN,kGAEQe,MAAM,GAAD,OACvBF,EADuB,sCACcD,IAH3B,WAETI,EAFS,QAKDC,GALC,sBAMP,IAAIC,MAAMF,EAASG,QANZ,uBAQMH,EAASI,OARf,cAQTC,EARS,yBASRA,GATQ,kCAWfrB,EAAS,KAAMsB,SAXA,0DAAF,mDAAC,GAelBC,0BAA0B,WAAD,wBAAE,WAAOC,EAAOxB,GAAd,kGAEAe,MAAM,GAAD,OACvBF,EADuB,gCACQD,EADR,kBACyBY,EADzB,yDAFL,WAEjBR,EAFiB,QAKTC,GALS,sBAMf,IAAIC,MAAMF,EAASG,QANJ,uBAQFH,EAASI,OARP,cAQjBC,EARiB,yBAShBA,GATgB,kCAWvBrB,EAAS,KAAMsB,SAXQ,0DAAF,qDAAC,GAe1BG,gBAAgB,WAAD,wBAAE,WAAOjB,EAAIR,GAAX,kGAEUe,MAAM,GAAD,OACvBF,EADuB,iBACPL,EADO,oBACOI,EADP,oBAFf,WAEPI,EAFO,QAKCC,GALD,sBAML,IAAIC,MAAMF,EAASG,QANd,uBAQOH,EAASI,OARhB,cAQPM,EARO,yBASNA,GATM,kCAWb1B,EAAS,KAAMsB,SAXF,0DAAF,qDAAC,GAchBK,gBAAgB,WAAD,wBAAE,WAAOnB,EAAIR,GAAX,kGAEUe,MAAM,GAAD,OACvBF,EADuB,iBACPL,EADO,4BACeI,EADf,oBAFf,WAEPI,EAFO,QAKCC,GALD,sBAML,IAAIC,MAAMF,EAASG,QANd,uBAQQH,EAASI,OARjB,cAQPC,EARO,yBASNA,GATM,kCAWbrB,EAAS,KAAMsB,SAXF,0DAAF,qDAAC,GAchBM,gBAAgB,WAAD,wBAAE,WAAOpB,EAAIR,GAAX,kGAEUe,MAAM,GAAD,OACvBF,EADuB,iBACPL,EADO,4BACeI,EADf,2BAFf,WAEPI,EAFO,QAKCC,GALD,sBAML,IAAIC,MAAMF,EAASG,QANd,uBAQQH,EAASI,OARjB,cAQPC,EARO,yBASNA,GATM,kCAWbrB,EAAS,KAAMsB,SAXF,0DAAF,qDAAC,G","sources":["pages/Home.jsx","services/APIservice.js"],"sourcesContent":["import { APIservise } from '../services/APIservice';\nimport { useState, useEffect } from 'react';\nimport { Container } from '../components/App.styled';\nimport { Link } from 'react-router-dom';\n\nconst Home = () => {\n  const [moviesArr, setMoviesArr] = useState([]);\n  const [error, setError] = useState(null);\n\n  const getMoviesArray = async () => {\n    setError(null);\n    setMoviesArr([]);\n    const result = await APIservise.getTrendingMovies(setError);\n    const receivedMoviesArray = await result?.results;\n    setMoviesArr(receivedMoviesArray);\n  };\n\n  useEffect(() => {\n    getMoviesArray();\n  }, []);\n\n  return (\n    <main>\n      <Container>\n        {error === null ? (\n          <section>\n            <h1>Trending today</h1>\n            <ul>\n              {moviesArr.map(({ id, title, name }) => (\n                <li key={id}>\n                  <Link to={`/movies/${id}`}>{title || name}</Link>\n                </li>\n              ))}\n            </ul>\n          </section>\n        ) : (\n          <h2>{error} Something went wrong...</h2>\n        )}\n      </Container>\n    </main>\n  );\n};\n\nexport default Home;\n","const API_KEY = 'ea236f9607da5e1c117233fca3100ef0';\nconst API_URL = 'https://api.themoviedb.org/3/';\n\nexport const APIservise = {\n  getTrendingMovies: async setError => {\n    try {\n      const response = await fetch(\n        `${API_URL}trending/movie/day?api_key=${API_KEY}`\n      );\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      const movies = await response.json();\n      return movies;\n    } catch (error) {\n      setError(error.message);\n    }\n  },\n\n  searchMovieByQueryAndPage: async (query, setError) => {\n    try {\n      const response = await fetch(\n        `${API_URL}search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false&year=2001`\n      );\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      const movies = await response.json();\n      return movies;\n    } catch (error) {\n      setError(error.message);\n    }\n  },\n\n  getMovieDetails: async (id, setError) => {\n    try {\n      const response = await fetch(\n        `${API_URL}movie/${id}?api_key=${API_KEY}&language=en-US`\n      );\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      const movie = await response.json();\n      return movie;\n    } catch (error) {\n      setError(error.message);\n    }\n  },\n  getMovieCredits: async (id, setError) => {\n    try {\n      const response = await fetch(\n        `${API_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n      );\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      const movies = await response.json();\n      return movies;\n    } catch (error) {\n      setError(error.message);\n    }\n  },\n  getMovieReviews: async (id, setError) => {\n    try {\n      const response = await fetch(\n        `${API_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n      );\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      const movies = await response.json();\n      return movies;\n    } catch (error) {\n      setError(error.message);\n    }\n  },\n};\n"],"names":["useState","moviesArr","setMoviesArr","error","setError","getMoviesArray","APIservise","result","results","receivedMoviesArray","useEffect","map","id","title","name","to","API_KEY","API_URL","getTrendingMovies","fetch","response","ok","Error","status","json","movies","message","searchMovieByQueryAndPage","query","getMovieDetails","movie","getMovieCredits","getMovieReviews"],"sourceRoot":""}