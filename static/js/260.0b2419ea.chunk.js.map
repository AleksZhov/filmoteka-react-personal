{"version":3,"file":"static/js/260.0b2419ea.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieDetails/MovieDetails.module.css?9ca9","pages/MovieDetails.jsx","services/APIservice.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"GoBackBtn\":\"MovieDetails_GoBackBtn__sO9wY\",\"wrapper\":\"MovieDetails_wrapper__cJixg\",\"addInfo\":\"MovieDetails_addInfo__xdErv\"};","import { useParams, useNavigate, Link, Routes, Route } from 'react-router-dom';\nimport { useState, useEffect, Suspense, lazy } from 'react';\nimport { Container } from '../components/App.styled';\nimport s from '../components/MovieDetails/MovieDetails.module.css';\nimport { APIservise } from '../services/APIservice';\n\nconst Cast = lazy(() => import('../components/Cast/Cast'));\nconst Reviews = lazy(() => import('../components/Reviews/Reviews'));\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const goBack = () => navigate(-1);\n\n  const getMovieDetails = async () => {\n    const result = await APIservise.getMovieDetails(movieId, setError);\n\n    setMovieDetails(result);\n  };\n\n  useEffect(() => {\n    getMovieDetails();\n    //eslint-disable-next-line\n  }, []);\n\n  return (\n    <>\n      <Container>\n        <button className={s.GoBackBtn} type=\"button\" onClick={goBack}>\n          Go back\n        </button>\n        {movieDetails && (\n          <div className={s.wrapper}>\n            <img\n              src={`https://image.tmdb.org/t/p/w500/${movieDetails.poster_path}`}\n              alt={movieDetails.tagline}\n              width=\"300\"\n            />\n            <div>\n              <h1>{movieDetails.title}</h1>\n              <p>User score: {movieDetails.vote_average * 10}% </p>\n              <h2> Overview</h2>\n              <p>{movieDetails.overview}</p>\n              <h2>Genres</h2>\n              <p>{movieDetails.genres.map(genre => genre.name).join(', ')}</p>\n            </div>\n          </div>\n        )}\n        <section className={s.addInfo}>\n          {error ? (\n            <h2>\n              {error}\n              {error === '404'\n                ? ' Information concerning choosen movie is not exist at the moment'\n                : '  Something went wrong'}\n            </h2>\n          ) : (\n            <>\n              <h2>Additional information</h2>\n              <ul>\n                <li>\n                  <Link to=\"cast\">Cast</Link>\n                </li>\n                <li>\n                  <Link to=\"reviews\">Reviews</Link>\n                </li>\n              </ul>\n            </>\n          )}\n        </section>\n        <section>\n          <Suspense>\n            <Routes>\n              <Route path=\"cast\" element={<Cast />} />\n              <Route path=\"reviews\" element={<Reviews />} />\n            </Routes>\n          </Suspense>\n        </section>\n      </Container>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","const API_KEY = 'ea236f9607da5e1c117233fca3100ef0';\nconst API_URL = 'https://api.themoviedb.org/3/';\n\nexport const APIservise = {\n  getTrendingMovies: async setError => {\n    try {\n      const response = await fetch(\n        `${API_URL}trending/all/day?api_key=${API_KEY}`\n      );\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      const movies = await response.json();\n      return movies;\n    } catch (error) {\n      setError(error.message);\n    }\n  },\n\n  searchMovieByQueryAndPage: async (query, setError) => {\n    try {\n      const response = await fetch(\n        `${API_URL}search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false&year=2001`\n      );\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      const movies = await response.json();\n      return movies;\n    } catch (error) {\n      setError(error.message);\n    }\n  },\n\n  getMovieDetails: async (id, setError) => {\n    try {\n      const response = await fetch(\n        `${API_URL}movie/${id}?api_key=${API_KEY}&language=en-US`\n      );\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      const movie = await response.json();\n      return movie;\n    } catch (error) {\n      setError(error.message);\n    }\n  },\n  getMovieCredits: async (id, setError) => {\n    try {\n      const response = await fetch(\n        `${API_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n      );\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      const movies = await response.json();\n      return movies;\n    } catch (error) {\n      setError(error.message);\n    }\n  },\n  getMovieReviews: async (id, setError) => {\n    try {\n      const response = await fetch(\n        `${API_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n      );\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      const movies = await response.json();\n      return movies;\n    } catch (error) {\n      setError(error.message);\n    }\n  },\n};\n"],"names":["Cast","lazy","Reviews","movieId","useParams","useState","movieDetails","setMovieDetails","error","setError","navigate","useNavigate","getMovieDetails","APIservise","result","useEffect","className","s","type","onClick","src","poster_path","alt","tagline","width","title","vote_average","overview","genres","map","genre","name","join","to","Suspense","path","element","API_KEY","API_URL","getTrendingMovies","fetch","response","ok","Error","status","json","movies","message","searchMovieByQueryAndPage","query","id","movie","getMovieCredits","getMovieReviews"],"sourceRoot":""}